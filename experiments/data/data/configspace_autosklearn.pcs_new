balancing:strategy categorical {none, weighting} [none]
classifier:__choice__ categorical {adaboost, bernoulli_nb, decision_tree, extra_trees, gaussian_nb, gradient_boosting, k_nearest_neighbors, lda, liblinear_svc, libsvm_svc, mlp, multinomial_nb, passive_aggressive, qda, random_forest, sgd} [random_forest]
data_preprocessing:categorical_transformer:categorical_encoding:__choice__ categorical {no_encoding, one_hot_encoding} [one_hot_encoding]
data_preprocessing:categorical_transformer:category_coalescence:__choice__ categorical {minority_coalescer, no_coalescense} [minority_coalescer]
data_preprocessing:numerical_transformer:imputation:strategy categorical {mean, median, most_frequent} [mean]
data_preprocessing:numerical_transformer:rescaling:__choice__ categorical {minmax, none, normalize, power_transformer, quantile_transformer, robust_scaler, standardize} [standardize]
feature_preprocessor:__choice__ categorical {extra_trees_preproc_for_classification, fast_ica, feature_agglomeration, kernel_pca, kitchen_sinks, liblinear_svc_preprocessor, no_preprocessing, nystroem_sampler, pca, polynomial, random_trees_embedding, select_percentile_classification, select_rates_classification} [no_preprocessing]
classifier:adaboost:algorithm categorical {SAMME.R, SAMME} [SAMME.R]
classifier:adaboost:learning_rate real [0.01, 2.0] [0.1]log
classifier:adaboost:max_depth integer [1, 10] [1]
classifier:adaboost:n_estimators integer [50, 500] [50]
classifier:bernoulli_nb:alpha real [0.01, 100.0] [1.0]log
classifier:bernoulli_nb:fit_prior categorical {True, False} [True]
classifier:decision_tree:criterion categorical {gini, entropy} [gini]
classifier:decision_tree:max_depth_factor real [0.0, 2.0] [0.5]
classifier:decision_tree:max_features categorical {1.0} [1.0]
classifier:decision_tree:max_leaf_nodes categorical {None} [None]
classifier:decision_tree:min_impurity_decrease categorical {0.0} [0.0]
classifier:decision_tree:min_samples_leaf integer [1, 20] [1]
classifier:decision_tree:min_samples_split integer [2, 20] [2]
classifier:decision_tree:min_weight_fraction_leaf categorical {0.0} [0.0]
classifier:extra_trees:bootstrap categorical {True, False} [False]
classifier:extra_trees:criterion categorical {gini, entropy} [gini]
classifier:extra_trees:max_depth categorical {None} [None]
classifier:extra_trees:max_features real [0.0, 1.0] [0.5]
classifier:extra_trees:max_leaf_nodes categorical {None} [None]
classifier:extra_trees:min_impurity_decrease categorical {0.0} [0.0]
classifier:extra_trees:min_samples_leaf integer [1, 20] [1]
classifier:extra_trees:min_samples_split integer [2, 20] [2]
classifier:extra_trees:min_weight_fraction_leaf categorical {0.0} [0.0]
classifier:gradient_boosting:early_stop categorical {off, valid, train} [off]
classifier:gradient_boosting:l2_regularization real [1e-10, 1.0] [1e-10]log
classifier:gradient_boosting:learning_rate real [0.01, 1.0] [0.1]log
classifier:gradient_boosting:loss categorical {auto} [auto]
classifier:gradient_boosting:max_bins categorical {255} [255]
classifier:gradient_boosting:max_depth categorical {None} [None]
classifier:gradient_boosting:max_leaf_nodes integer [3, 2047] [31]log
classifier:gradient_boosting:min_samples_leaf integer [1, 200] [20]log
classifier:gradient_boosting:scoring categorical {loss} [loss]
classifier:gradient_boosting:tol categorical {1e-07} [1e-07]
classifier:k_nearest_neighbors:n_neighbors integer [1, 100] [1]log
classifier:k_nearest_neighbors:p categorical {1, 2} [2]
classifier:k_nearest_neighbors:weights categorical {uniform, distance} [uniform]
classifier:lda:shrinkage categorical {None, auto, manual} [None]
classifier:lda:tol real [1e-05, 0.1] [0.0001]log
classifier:liblinear_svc:C real [0.03125, 32768.0] [1.0]log
classifier:liblinear_svc:dual categorical {False} [False]
classifier:liblinear_svc:fit_intercept categorical {True} [True]
classifier:liblinear_svc:intercept_scaling categorical {1} [1]
classifier:liblinear_svc:loss categorical {hinge, squared_hinge} [squared_hinge]
classifier:liblinear_svc:multi_class categorical {ovr} [ovr]
classifier:liblinear_svc:penalty categorical {l1, l2} [l2]
classifier:liblinear_svc:tol real [1e-05, 0.1] [0.0001]log
classifier:libsvm_svc:C real [0.03125, 32768.0] [1.0]log
classifier:libsvm_svc:gamma real [3.0517578125e-05, 8.0] [0.1]log
classifier:libsvm_svc:kernel categorical {rbf, poly, sigmoid} [rbf]
classifier:libsvm_svc:max_iter categorical {-1} [-1]
classifier:libsvm_svc:shrinking categorical {True, False} [True]
classifier:libsvm_svc:tol real [1e-05, 0.1] [0.001]log
classifier:mlp:activation categorical {tanh, relu} [relu]
classifier:mlp:alpha real [1e-07, 0.1] [0.0001]log
classifier:mlp:batch_size categorical {auto} [auto]
classifier:mlp:beta_1 categorical {0.9} [0.9]
classifier:mlp:beta_2 categorical {0.999} [0.999]
classifier:mlp:early_stopping categorical {valid, train} [valid]
classifier:mlp:epsilon categorical {1e-08} [1e-08]
classifier:mlp:hidden_layer_depth integer [1, 3] [1]
classifier:mlp:learning_rate_init real [0.0001, 0.5] [0.001]log
classifier:mlp:n_iter_no_change categorical {32} [32]
classifier:mlp:num_nodes_per_layer integer [16, 264] [32]log
classifier:mlp:shuffle categorical {True} [True]
classifier:mlp:solver categorical {adam} [adam]
classifier:mlp:tol categorical {0.0001} [0.0001]
classifier:multinomial_nb:alpha real [0.01, 100.0] [1.0]log
classifier:multinomial_nb:fit_prior categorical {True, False} [True]
classifier:passive_aggressive:C real [1e-05, 10.0] [1.0]log
classifier:passive_aggressive:average categorical {False, True} [False]
classifier:passive_aggressive:fit_intercept categorical {True} [True]
classifier:passive_aggressive:loss categorical {hinge, squared_hinge} [hinge]
classifier:passive_aggressive:tol real [1e-05, 0.1] [0.0001]log
classifier:qda:reg_param real [0.0, 1.0] [0.0]
classifier:random_forest:bootstrap categorical {True, False} [True]
classifier:random_forest:criterion categorical {gini, entropy} [gini]
classifier:random_forest:max_depth categorical {None} [None]
classifier:random_forest:max_features real [0.0, 1.0] [0.5]
classifier:random_forest:max_leaf_nodes categorical {None} [None]
classifier:random_forest:min_impurity_decrease categorical {0.0} [0.0]
classifier:random_forest:min_samples_leaf integer [1, 20] [1]
classifier:random_forest:min_samples_split integer [2, 20] [2]
classifier:random_forest:min_weight_fraction_leaf categorical {0.0} [0.0]
classifier:sgd:alpha real [1e-07, 0.1] [0.0001]log
classifier:sgd:average categorical {False, True} [False]
classifier:sgd:fit_intercept categorical {True} [True]
classifier:sgd:learning_rate categorical {optimal, invscaling, constant} [invscaling]
classifier:sgd:loss categorical {hinge, log, modified_huber, squared_hinge, perceptron} [log]
classifier:sgd:penalty categorical {l1, l2, elasticnet} [l2]
classifier:sgd:tol real [1e-05, 0.1] [0.0001]log
data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction real [0.0001, 0.5] [0.01]log
data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles integer [10, 2000] [1000]
data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution categorical {uniform, normal} [uniform]
data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max real [0.7, 0.999] [0.75]
data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min real [0.001, 0.3] [0.25]
feature_preprocessor:extra_trees_preproc_for_classification:bootstrap categorical {True, False} [False]
feature_preprocessor:extra_trees_preproc_for_classification:criterion categorical {gini, entropy} [gini]
feature_preprocessor:extra_trees_preproc_for_classification:max_depth categorical {None} [None]
feature_preprocessor:extra_trees_preproc_for_classification:max_features real [0.0, 1.0] [0.5]
feature_preprocessor:extra_trees_preproc_for_classification:max_leaf_nodes categorical {None} [None]
feature_preprocessor:extra_trees_preproc_for_classification:min_impurity_decrease categorical {0.0} [0.0]
feature_preprocessor:extra_trees_preproc_for_classification:min_samples_leaf integer [1, 20] [1]
feature_preprocessor:extra_trees_preproc_for_classification:min_samples_split integer [2, 20] [2]
feature_preprocessor:extra_trees_preproc_for_classification:min_weight_fraction_leaf categorical {0.0} [0.0]
feature_preprocessor:extra_trees_preproc_for_classification:n_estimators categorical {100} [100]
feature_preprocessor:fast_ica:algorithm categorical {parallel, deflation} [parallel]
feature_preprocessor:fast_ica:fun categorical {logcosh, exp, cube} [logcosh]
feature_preprocessor:fast_ica:whiten categorical {False, True} [False]
feature_preprocessor:feature_agglomeration:affinity categorical {euclidean, manhattan, cosine} [euclidean]
feature_preprocessor:feature_agglomeration:linkage categorical {ward, complete, average} [ward]
feature_preprocessor:feature_agglomeration:n_clusters integer [2, 400] [25]
feature_preprocessor:feature_agglomeration:pooling_func categorical {mean, median, max} [mean]
feature_preprocessor:kernel_pca:kernel categorical {poly, rbf, sigmoid, cosine} [rbf]
feature_preprocessor:kernel_pca:n_components integer [10, 2000] [100]
feature_preprocessor:kitchen_sinks:gamma real [3.0517578125e-05, 8.0] [1.0]log
feature_preprocessor:kitchen_sinks:n_components integer [50, 10000] [100]log
feature_preprocessor:liblinear_svc_preprocessor:C real [0.03125, 32768.0] [1.0]log
feature_preprocessor:liblinear_svc_preprocessor:dual categorical {False} [False]
feature_preprocessor:liblinear_svc_preprocessor:fit_intercept categorical {True} [True]
feature_preprocessor:liblinear_svc_preprocessor:intercept_scaling categorical {1} [1]
feature_preprocessor:liblinear_svc_preprocessor:loss categorical {hinge, squared_hinge} [squared_hinge]
feature_preprocessor:liblinear_svc_preprocessor:multi_class categorical {ovr} [ovr]
feature_preprocessor:liblinear_svc_preprocessor:penalty categorical {l1} [l1]
feature_preprocessor:liblinear_svc_preprocessor:tol real [1e-05, 0.1] [0.0001]log
feature_preprocessor:nystroem_sampler:kernel categorical {poly, rbf, sigmoid, cosine} [rbf]
feature_preprocessor:nystroem_sampler:n_components integer [50, 10000] [100]log
feature_preprocessor:pca:keep_variance real [0.5, 0.9999] [0.9999]
feature_preprocessor:pca:whiten categorical {False, True} [False]
feature_preprocessor:polynomial:degree integer [2, 3] [2]
feature_preprocessor:polynomial:include_bias categorical {True, False} [True]
feature_preprocessor:polynomial:interaction_only categorical {False, True} [False]
feature_preprocessor:random_trees_embedding:bootstrap categorical {True, False} [True]
feature_preprocessor:random_trees_embedding:max_depth integer [2, 10] [5]
feature_preprocessor:random_trees_embedding:max_leaf_nodes categorical {None} [None]
feature_preprocessor:random_trees_embedding:min_samples_leaf integer [1, 20] [1]
feature_preprocessor:random_trees_embedding:min_samples_split integer [2, 20] [2]
feature_preprocessor:random_trees_embedding:min_weight_fraction_leaf categorical {1.0} [1.0]
feature_preprocessor:random_trees_embedding:n_estimators integer [10, 100] [10]
feature_preprocessor:select_percentile_classification:percentile real [1.0, 99.0] [50.0]
feature_preprocessor:select_percentile_classification:score_func categorical {chi2, f_classif, mutual_info} [chi2]
feature_preprocessor:select_rates_classification:alpha real [0.01, 0.5] [0.1]
feature_preprocessor:select_rates_classification:score_func categorical {chi2, f_classif, mutual_info_classif} [chi2]
classifier:gradient_boosting:n_iter_no_change integer [1, 20] [10]
classifier:gradient_boosting:validation_fraction real [0.01, 0.4] [0.1]
classifier:lda:shrinkage_factor real [0.0, 1.0] [0.5]
classifier:libsvm_svc:coef0 real [-1.0, 1.0] [0.0]
classifier:libsvm_svc:degree integer [2, 5] [3]
classifier:mlp:validation_fraction categorical {0.1} [0.1]
classifier:sgd:epsilon real [1e-05, 0.1] [0.0001]log
classifier:sgd:eta0 real [1e-07, 0.1] [0.01]log
classifier:sgd:l1_ratio real [1e-09, 1.0] [0.15]log
classifier:sgd:power_t real [1e-05, 1.0] [0.5]
feature_preprocessor:fast_ica:n_components integer [10, 2000] [100]
feature_preprocessor:kernel_pca:coef0 real [-1.0, 1.0] [0.0]
feature_preprocessor:kernel_pca:degree integer [2, 5] [3]
feature_preprocessor:kernel_pca:gamma real [3.0517578125e-05, 8.0] [0.01]log
feature_preprocessor:nystroem_sampler:coef0 real [-1.0, 1.0] [0.0]
feature_preprocessor:nystroem_sampler:degree integer [2, 5] [3]
feature_preprocessor:nystroem_sampler:gamma real [3.0517578125e-05, 8.0] [0.1]log
feature_preprocessor:select_rates_classification:mode categorical {fpr, fdr, fwe} [fpr]

classifier:adaboost:algorithm | classifier:__choice__ == adaboost
classifier:adaboost:learning_rate | classifier:__choice__ == adaboost
classifier:adaboost:max_depth | classifier:__choice__ == adaboost
classifier:adaboost:n_estimators | classifier:__choice__ == adaboost
classifier:bernoulli_nb:alpha | classifier:__choice__ == bernoulli_nb
classifier:bernoulli_nb:fit_prior | classifier:__choice__ == bernoulli_nb
classifier:decision_tree:criterion | classifier:__choice__ == decision_tree
classifier:decision_tree:max_depth_factor | classifier:__choice__ == decision_tree
classifier:decision_tree:max_features | classifier:__choice__ == decision_tree
classifier:decision_tree:max_leaf_nodes | classifier:__choice__ == decision_tree
classifier:decision_tree:min_impurity_decrease | classifier:__choice__ == decision_tree
classifier:decision_tree:min_samples_leaf | classifier:__choice__ == decision_tree
classifier:decision_tree:min_samples_split | classifier:__choice__ == decision_tree
classifier:decision_tree:min_weight_fraction_leaf | classifier:__choice__ == decision_tree
classifier:extra_trees:bootstrap | classifier:__choice__ == extra_trees
classifier:extra_trees:criterion | classifier:__choice__ == extra_trees
classifier:extra_trees:max_depth | classifier:__choice__ == extra_trees
classifier:extra_trees:max_features | classifier:__choice__ == extra_trees
classifier:extra_trees:max_leaf_nodes | classifier:__choice__ == extra_trees
classifier:extra_trees:min_impurity_decrease | classifier:__choice__ == extra_trees
classifier:extra_trees:min_samples_leaf | classifier:__choice__ == extra_trees
classifier:extra_trees:min_samples_split | classifier:__choice__ == extra_trees
classifier:extra_trees:min_weight_fraction_leaf | classifier:__choice__ == extra_trees
classifier:gradient_boosting:early_stop | classifier:__choice__ == gradient_boosting
classifier:gradient_boosting:l2_regularization | classifier:__choice__ == gradient_boosting
classifier:gradient_boosting:learning_rate | classifier:__choice__ == gradient_boosting
classifier:gradient_boosting:loss | classifier:__choice__ == gradient_boosting
classifier:gradient_boosting:max_bins | classifier:__choice__ == gradient_boosting
classifier:gradient_boosting:max_depth | classifier:__choice__ == gradient_boosting
classifier:gradient_boosting:max_leaf_nodes | classifier:__choice__ == gradient_boosting
classifier:gradient_boosting:min_samples_leaf | classifier:__choice__ == gradient_boosting
classifier:gradient_boosting:scoring | classifier:__choice__ == gradient_boosting
classifier:gradient_boosting:tol | classifier:__choice__ == gradient_boosting
classifier:k_nearest_neighbors:n_neighbors | classifier:__choice__ == k_nearest_neighbors
classifier:k_nearest_neighbors:p | classifier:__choice__ == k_nearest_neighbors
classifier:k_nearest_neighbors:weights | classifier:__choice__ == k_nearest_neighbors
classifier:lda:shrinkage | classifier:__choice__ == lda
classifier:lda:tol | classifier:__choice__ == lda
classifier:liblinear_svc:C | classifier:__choice__ == liblinear_svc
classifier:liblinear_svc:dual | classifier:__choice__ == liblinear_svc
classifier:liblinear_svc:fit_intercept | classifier:__choice__ == liblinear_svc
classifier:liblinear_svc:intercept_scaling | classifier:__choice__ == liblinear_svc
classifier:liblinear_svc:loss | classifier:__choice__ == liblinear_svc
classifier:liblinear_svc:multi_class | classifier:__choice__ == liblinear_svc
classifier:liblinear_svc:penalty | classifier:__choice__ == liblinear_svc
classifier:liblinear_svc:tol | classifier:__choice__ == liblinear_svc
classifier:libsvm_svc:C | classifier:__choice__ == libsvm_svc
classifier:libsvm_svc:gamma | classifier:__choice__ == libsvm_svc
classifier:libsvm_svc:kernel | classifier:__choice__ == libsvm_svc
classifier:libsvm_svc:max_iter | classifier:__choice__ == libsvm_svc
classifier:libsvm_svc:shrinking | classifier:__choice__ == libsvm_svc
classifier:libsvm_svc:tol | classifier:__choice__ == libsvm_svc
classifier:mlp:activation | classifier:__choice__ == mlp
classifier:mlp:alpha | classifier:__choice__ == mlp
classifier:mlp:batch_size | classifier:__choice__ == mlp
classifier:mlp:beta_1 | classifier:__choice__ == mlp
classifier:mlp:beta_2 | classifier:__choice__ == mlp
classifier:mlp:early_stopping | classifier:__choice__ == mlp
classifier:mlp:epsilon | classifier:__choice__ == mlp
classifier:mlp:hidden_layer_depth | classifier:__choice__ == mlp
classifier:mlp:learning_rate_init | classifier:__choice__ == mlp
classifier:mlp:n_iter_no_change | classifier:__choice__ == mlp
classifier:mlp:num_nodes_per_layer | classifier:__choice__ == mlp
classifier:mlp:shuffle | classifier:__choice__ == mlp
classifier:mlp:solver | classifier:__choice__ == mlp
classifier:mlp:tol | classifier:__choice__ == mlp
classifier:multinomial_nb:alpha | classifier:__choice__ == multinomial_nb
classifier:multinomial_nb:fit_prior | classifier:__choice__ == multinomial_nb
classifier:passive_aggressive:C | classifier:__choice__ == passive_aggressive
classifier:passive_aggressive:average | classifier:__choice__ == passive_aggressive
classifier:passive_aggressive:fit_intercept | classifier:__choice__ == passive_aggressive
classifier:passive_aggressive:loss | classifier:__choice__ == passive_aggressive
classifier:passive_aggressive:tol | classifier:__choice__ == passive_aggressive
classifier:qda:reg_param | classifier:__choice__ == qda
classifier:random_forest:bootstrap | classifier:__choice__ == random_forest
classifier:random_forest:criterion | classifier:__choice__ == random_forest
classifier:random_forest:max_depth | classifier:__choice__ == random_forest
classifier:random_forest:max_features | classifier:__choice__ == random_forest
classifier:random_forest:max_leaf_nodes | classifier:__choice__ == random_forest
classifier:random_forest:min_impurity_decrease | classifier:__choice__ == random_forest
classifier:random_forest:min_samples_leaf | classifier:__choice__ == random_forest
classifier:random_forest:min_samples_split | classifier:__choice__ == random_forest
classifier:random_forest:min_weight_fraction_leaf | classifier:__choice__ == random_forest
classifier:sgd:alpha | classifier:__choice__ == sgd
classifier:sgd:average | classifier:__choice__ == sgd
classifier:sgd:fit_intercept | classifier:__choice__ == sgd
classifier:sgd:learning_rate | classifier:__choice__ == sgd
classifier:sgd:loss | classifier:__choice__ == sgd
classifier:sgd:penalty | classifier:__choice__ == sgd
classifier:sgd:tol | classifier:__choice__ == sgd
data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction | data_preprocessing:categorical_transformer:category_coalescence:__choice__ == minority_coalescer
data_preprocessing:numerical_transformer:rescaling:quantile_transformer:n_quantiles | data_preprocessing:numerical_transformer:rescaling:__choice__ == quantile_transformer
data_preprocessing:numerical_transformer:rescaling:quantile_transformer:output_distribution | data_preprocessing:numerical_transformer:rescaling:__choice__ == quantile_transformer
data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_max | data_preprocessing:numerical_transformer:rescaling:__choice__ == robust_scaler
data_preprocessing:numerical_transformer:rescaling:robust_scaler:q_min | data_preprocessing:numerical_transformer:rescaling:__choice__ == robust_scaler
feature_preprocessor:extra_trees_preproc_for_classification:bootstrap | feature_preprocessor:__choice__ == extra_trees_preproc_for_classification
feature_preprocessor:extra_trees_preproc_for_classification:criterion | feature_preprocessor:__choice__ == extra_trees_preproc_for_classification
feature_preprocessor:extra_trees_preproc_for_classification:max_depth | feature_preprocessor:__choice__ == extra_trees_preproc_for_classification
feature_preprocessor:extra_trees_preproc_for_classification:max_features | feature_preprocessor:__choice__ == extra_trees_preproc_for_classification
feature_preprocessor:extra_trees_preproc_for_classification:max_leaf_nodes | feature_preprocessor:__choice__ == extra_trees_preproc_for_classification
feature_preprocessor:extra_trees_preproc_for_classification:min_impurity_decrease | feature_preprocessor:__choice__ == extra_trees_preproc_for_classification
feature_preprocessor:extra_trees_preproc_for_classification:min_samples_leaf | feature_preprocessor:__choice__ == extra_trees_preproc_for_classification
feature_preprocessor:extra_trees_preproc_for_classification:min_samples_split | feature_preprocessor:__choice__ == extra_trees_preproc_for_classification
feature_preprocessor:extra_trees_preproc_for_classification:min_weight_fraction_leaf | feature_preprocessor:__choice__ == extra_trees_preproc_for_classification
feature_preprocessor:extra_trees_preproc_for_classification:n_estimators | feature_preprocessor:__choice__ == extra_trees_preproc_for_classification
feature_preprocessor:fast_ica:algorithm | feature_preprocessor:__choice__ == fast_ica
feature_preprocessor:fast_ica:fun | feature_preprocessor:__choice__ == fast_ica
feature_preprocessor:fast_ica:whiten | feature_preprocessor:__choice__ == fast_ica
feature_preprocessor:feature_agglomeration:affinity | feature_preprocessor:__choice__ == feature_agglomeration
feature_preprocessor:feature_agglomeration:linkage | feature_preprocessor:__choice__ == feature_agglomeration
feature_preprocessor:feature_agglomeration:n_clusters | feature_preprocessor:__choice__ == feature_agglomeration
feature_preprocessor:feature_agglomeration:pooling_func | feature_preprocessor:__choice__ == feature_agglomeration
feature_preprocessor:kernel_pca:kernel | feature_preprocessor:__choice__ == kernel_pca
feature_preprocessor:kernel_pca:n_components | feature_preprocessor:__choice__ == kernel_pca
feature_preprocessor:kitchen_sinks:gamma | feature_preprocessor:__choice__ == kitchen_sinks
feature_preprocessor:kitchen_sinks:n_components | feature_preprocessor:__choice__ == kitchen_sinks
feature_preprocessor:liblinear_svc_preprocessor:C | feature_preprocessor:__choice__ == liblinear_svc_preprocessor
feature_preprocessor:liblinear_svc_preprocessor:dual | feature_preprocessor:__choice__ == liblinear_svc_preprocessor
feature_preprocessor:liblinear_svc_preprocessor:fit_intercept | feature_preprocessor:__choice__ == liblinear_svc_preprocessor
feature_preprocessor:liblinear_svc_preprocessor:intercept_scaling | feature_preprocessor:__choice__ == liblinear_svc_preprocessor
feature_preprocessor:liblinear_svc_preprocessor:loss | feature_preprocessor:__choice__ == liblinear_svc_preprocessor
feature_preprocessor:liblinear_svc_preprocessor:multi_class | feature_preprocessor:__choice__ == liblinear_svc_preprocessor
feature_preprocessor:liblinear_svc_preprocessor:penalty | feature_preprocessor:__choice__ == liblinear_svc_preprocessor
feature_preprocessor:liblinear_svc_preprocessor:tol | feature_preprocessor:__choice__ == liblinear_svc_preprocessor
feature_preprocessor:nystroem_sampler:kernel | feature_preprocessor:__choice__ == nystroem_sampler
feature_preprocessor:nystroem_sampler:n_components | feature_preprocessor:__choice__ == nystroem_sampler
feature_preprocessor:pca:keep_variance | feature_preprocessor:__choice__ == pca
feature_preprocessor:pca:whiten | feature_preprocessor:__choice__ == pca
feature_preprocessor:polynomial:degree | feature_preprocessor:__choice__ == polynomial
feature_preprocessor:polynomial:include_bias | feature_preprocessor:__choice__ == polynomial
feature_preprocessor:polynomial:interaction_only | feature_preprocessor:__choice__ == polynomial
feature_preprocessor:random_trees_embedding:bootstrap | feature_preprocessor:__choice__ == random_trees_embedding
feature_preprocessor:random_trees_embedding:max_depth | feature_preprocessor:__choice__ == random_trees_embedding
feature_preprocessor:random_trees_embedding:max_leaf_nodes | feature_preprocessor:__choice__ == random_trees_embedding
feature_preprocessor:random_trees_embedding:min_samples_leaf | feature_preprocessor:__choice__ == random_trees_embedding
feature_preprocessor:random_trees_embedding:min_samples_split | feature_preprocessor:__choice__ == random_trees_embedding
feature_preprocessor:random_trees_embedding:min_weight_fraction_leaf | feature_preprocessor:__choice__ == random_trees_embedding
feature_preprocessor:random_trees_embedding:n_estimators | feature_preprocessor:__choice__ == random_trees_embedding
feature_preprocessor:select_percentile_classification:percentile | feature_preprocessor:__choice__ == select_percentile_classification
feature_preprocessor:select_percentile_classification:score_func | feature_preprocessor:__choice__ == select_percentile_classification
feature_preprocessor:select_rates_classification:alpha | feature_preprocessor:__choice__ == select_rates_classification
feature_preprocessor:select_rates_classification:score_func | feature_preprocessor:__choice__ == select_rates_classification
classifier:gradient_boosting:n_iter_no_change | classifier:gradient_boosting:early_stop in {valid, train}
classifier:gradient_boosting:validation_fraction | classifier:gradient_boosting:early_stop == valid
classifier:lda:shrinkage_factor | classifier:lda:shrinkage == manual
classifier:libsvm_svc:coef0 | classifier:libsvm_svc:kernel in {poly, sigmoid}
classifier:libsvm_svc:degree | classifier:libsvm_svc:kernel == poly
classifier:mlp:validation_fraction | classifier:mlp:early_stopping in {valid}
classifier:sgd:eta0 | classifier:sgd:learning_rate in {invscaling, constant}
classifier:sgd:power_t | classifier:sgd:learning_rate == invscaling
classifier:sgd:epsilon | classifier:sgd:loss == modified_huber
classifier:sgd:l1_ratio | classifier:sgd:penalty == elasticnet
feature_preprocessor:fast_ica:n_components | feature_preprocessor:fast_ica:whiten == True
feature_preprocessor:kernel_pca:coef0 | feature_preprocessor:kernel_pca:kernel in {poly, sigmoid}
feature_preprocessor:kernel_pca:degree | feature_preprocessor:kernel_pca:kernel == poly
feature_preprocessor:kernel_pca:gamma | feature_preprocessor:kernel_pca:kernel in {poly, rbf}
feature_preprocessor:nystroem_sampler:coef0 | feature_preprocessor:nystroem_sampler:kernel in {poly, sigmoid}
feature_preprocessor:nystroem_sampler:degree | feature_preprocessor:nystroem_sampler:kernel == poly
feature_preprocessor:nystroem_sampler:gamma | feature_preprocessor:nystroem_sampler:kernel in {poly, rbf, sigmoid}
feature_preprocessor:select_rates_classification:mode | feature_preprocessor:select_rates_classification:score_func != mutual_info_classif

{classifier:__choice__=adaboost, feature_preprocessor:__choice__=kernel_pca}
{classifier:__choice__=adaboost, feature_preprocessor:__choice__=kitchen_sinks}
{classifier:__choice__=adaboost, feature_preprocessor:__choice__=nystroem_sampler}
{classifier:__choice__=decision_tree, feature_preprocessor:__choice__=kernel_pca}
{classifier:__choice__=decision_tree, feature_preprocessor:__choice__=kitchen_sinks}
{classifier:__choice__=decision_tree, feature_preprocessor:__choice__=nystroem_sampler}
{classifier:__choice__=extra_trees, feature_preprocessor:__choice__=kernel_pca}
{classifier:__choice__=extra_trees, feature_preprocessor:__choice__=kitchen_sinks}
{classifier:__choice__=extra_trees, feature_preprocessor:__choice__=nystroem_sampler}
{classifier:__choice__=gaussian_nb, feature_preprocessor:__choice__=kernel_pca}
{classifier:__choice__=gaussian_nb, feature_preprocessor:__choice__=kitchen_sinks}
{classifier:__choice__=gaussian_nb, feature_preprocessor:__choice__=nystroem_sampler}
{classifier:__choice__=gradient_boosting, feature_preprocessor:__choice__=kernel_pca}
{classifier:__choice__=gradient_boosting, feature_preprocessor:__choice__=kitchen_sinks}
{classifier:__choice__=gradient_boosting, feature_preprocessor:__choice__=nystroem_sampler}
{classifier:__choice__=k_nearest_neighbors, feature_preprocessor:__choice__=kernel_pca}
{classifier:__choice__=k_nearest_neighbors, feature_preprocessor:__choice__=kitchen_sinks}
{classifier:__choice__=k_nearest_neighbors, feature_preprocessor:__choice__=nystroem_sampler}
{classifier:__choice__=libsvm_svc, feature_preprocessor:__choice__=kernel_pca}
{classifier:__choice__=libsvm_svc, feature_preprocessor:__choice__=kitchen_sinks}
{classifier:__choice__=libsvm_svc, feature_preprocessor:__choice__=nystroem_sampler}
{classifier:__choice__=mlp, feature_preprocessor:__choice__=kernel_pca}
{classifier:__choice__=mlp, feature_preprocessor:__choice__=kitchen_sinks}
{classifier:__choice__=mlp, feature_preprocessor:__choice__=nystroem_sampler}
{classifier:__choice__=random_forest, feature_preprocessor:__choice__=kernel_pca}
{classifier:__choice__=random_forest, feature_preprocessor:__choice__=kitchen_sinks}
{classifier:__choice__=random_forest, feature_preprocessor:__choice__=nystroem_sampler}
{classifier:liblinear_svc:dual=False, classifier:liblinear_svc:penalty=l1}
{classifier:liblinear_svc:dual=False, classifier:liblinear_svc:penalty=l2, classifier:liblinear_svc:loss=hinge}
{classifier:liblinear_svc:penalty=l1, classifier:liblinear_svc:loss=hinge}
{feature_preprocessor:__choice__=extra_trees_preproc_for_classification, classifier:__choice__=multinomial_nb}
{feature_preprocessor:__choice__=fast_ica, classifier:__choice__=multinomial_nb}
{feature_preprocessor:__choice__=fast_ica, classifier:__choice__=multinomial_nb}
{feature_preprocessor:__choice__=feature_agglomeration, classifier:__choice__=multinomial_nb}
{feature_preprocessor:__choice__=kernel_pca, classifier:__choice__=multinomial_nb}
{feature_preprocessor:__choice__=kernel_pca, classifier:__choice__=multinomial_nb}
{feature_preprocessor:__choice__=kitchen_sinks, classifier:__choice__=multinomial_nb}
{feature_preprocessor:__choice__=kitchen_sinks, classifier:__choice__=multinomial_nb}
{feature_preprocessor:__choice__=liblinear_svc_preprocessor, classifier:__choice__=multinomial_nb}
{feature_preprocessor:__choice__=no_preprocessing, classifier:__choice__=multinomial_nb}
{feature_preprocessor:__choice__=nystroem_sampler, classifier:__choice__=multinomial_nb}
{feature_preprocessor:__choice__=nystroem_sampler, classifier:__choice__=multinomial_nb}
{feature_preprocessor:__choice__=pca, classifier:__choice__=multinomial_nb}
{feature_preprocessor:__choice__=pca, classifier:__choice__=multinomial_nb}
{feature_preprocessor:__choice__=polynomial, classifier:__choice__=multinomial_nb}
{feature_preprocessor:__choice__=random_trees_embedding, classifier:__choice__=gaussian_nb}
{feature_preprocessor:__choice__=random_trees_embedding, classifier:__choice__=gradient_boosting}
{feature_preprocessor:__choice__=random_trees_embedding, classifier:__choice__=lda}
{feature_preprocessor:__choice__=random_trees_embedding, classifier:__choice__=qda}
{feature_preprocessor:__choice__=select_percentile_classification, classifier:__choice__=multinomial_nb}
{feature_preprocessor:__choice__=select_rates_classification, classifier:__choice__=multinomial_nb}
{feature_preprocessor:feature_agglomeration:affinity=cosine, feature_preprocessor:feature_agglomeration:linkage=ward}
{feature_preprocessor:feature_agglomeration:affinity=manhattan, feature_preprocessor:feature_agglomeration:linkage=ward}
{feature_preprocessor:liblinear_svc_preprocessor:penalty=l1, feature_preprocessor:liblinear_svc_preprocessor:loss=hinge}
